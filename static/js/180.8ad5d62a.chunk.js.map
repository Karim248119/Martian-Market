{"version":3,"file":"static/js/180.8ad5d62a.chunk.js","mappings":"uIAEe,SAASA,EAAMC,GAA6C,IAA5C,MAAEC,EAAK,QAAEC,EAAO,UAAEC,EAAS,KAAEC,EAAI,KAAEC,GAAML,EACtE,OACEM,EAAAA,EAAAA,MAAA,UACED,KAAMA,EACNH,QAASA,EACTC,UAAW,uJAAuJA,IAAYI,SAAA,EAE9KC,EAAAA,EAAAA,KAAA,QAAML,UAAU,+LAChBG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4FAA2FI,SAAA,EACxGC,EAAAA,EAAAA,KAAA,QAAAD,SAAON,KACPO,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,GAAQA,SAIvB,C,wKCNA,MAAMK,EAASC,IAAAA,OAAW,CACxBC,KAAMD,IAAAA,SAAaE,WAAWC,IAAI,GAAGC,IAAI,IAAIC,WAC7CC,MAAON,IAAAA,SACJM,MAAM,CACLC,kBAAmB,EACnBC,KAAM,CAAEC,MAAO,CAAC,MAAO,UAExBJ,WACHK,SAAUV,IAAAA,SACPW,QAAQ,IAAIC,OAAO,uCACnBP,WACHQ,YAAab,IAAAA,IAAQ,cAGR,SAASc,IACtB,MAAOb,EAAMc,IAAWC,EAAAA,EAAAA,UAAS,KAC1BV,EAAOW,IAAYD,EAAAA,EAAAA,UAAS,KAC5BN,EAAUQ,IAAeF,EAAAA,EAAAA,UAAS,KAClCH,EAAaM,IAAkBH,EAAAA,EAAAA,UAAS,KACxCI,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,CAAC,GAChCM,GAAWC,EAAAA,EAAAA,MAoDjB,OACE3B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4DAA2DI,UACxED,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iCAAgCI,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8DAA6DI,SAAC,aAG5ED,EAAAA,EAAAA,MAAA,QAAM4B,SApCOC,UAEnB,GADAC,EAAEC,iBAtBiBC,MACnB,MAAM,MAAEC,GAAU9B,EAAO+B,SAAS,CAAE7B,OAAMK,QAAOI,WAAUG,gBAC3D,GAAIgB,EAAO,CACT,MAAME,EAAY,CAAC,EAYnB,OAXAF,EAAMG,QAAQC,SAAQ3C,IAAwB,IAAvB,KAAE4C,EAAI,QAAEC,GAAS7C,EACtB,gBAAZ4C,EAAK,GACPH,EAAUlB,YAAc,uBACH,aAAZqB,EAAK,GACdH,EAAUrB,SACR,wFAEFqB,EAAUG,EAAK,IAAMC,CACvB,IAEFd,EAAUU,IACH,CACT,CAEA,OADAV,EAAU,CAAC,IACJ,CAAI,EAKPO,GACF,UACQQ,EAAAA,EAAAA,IAA+BC,EAAAA,EAAM/B,EAAOI,GAClD,MAAM4B,EAAOD,EAAAA,EAAKE,YAClBC,QAAQC,IAAIH,GACRA,SACII,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASN,EAAKO,KAAM,CACvCvC,MAAOgC,EAAKhC,MACZL,KAAMA,EACN6C,MAAO,KAGXN,QAAQC,IAAI,kCACZM,EAAAA,GAAMC,QAAQ,iCAAkC,CAC9CC,SAAU,eAEZ3B,EAAS,IACX,CAAE,MAAOO,GACW,iDAAlBA,EAAMM,QACFY,EAAAA,GAAMlB,MAAM,uBAAwB,CAClCoB,SAAU,kBAEZT,QAAQC,IAAIZ,EAAMM,QACxB,CACF,EAUmCtC,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEoD,QAAQ,OACRzD,UAAU,sDAAqDI,SAChE,UAGDC,EAAAA,EAAAA,KAAA,SACEH,KAAK,OACLwD,GAAG,OACHlD,KAAK,OACLmD,MAAOnD,EACPoD,SAAW3B,GAAMX,EAAQW,EAAE4B,OAAOF,OAClC3D,UAAW,qEACT2B,EAAOnB,KAAO,iBAAmB,iHAGpCmB,EAAOnB,OACNH,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0CAAyCI,SACnDuB,EAAOnB,WAIdL,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEoD,QAAQ,QACRzD,UAAU,sDAAqDI,SAChE,WAGDC,EAAAA,EAAAA,KAAA,SACEH,KAAK,QACLwD,GAAG,QACHlD,KAAK,QACLmD,MAAO9C,EACP+C,SAAW3B,GAAMT,EAASS,EAAE4B,OAAOF,OACnC3D,UAAW,qEACT2B,EAAOd,MAAQ,iBAAmB,iHAGrCc,EAAOd,QACNR,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0CAAyCI,SACnDuB,EAAOd,YAIdV,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEoD,QAAQ,WACRzD,UAAU,sDAAqDI,SAChE,cAGDC,EAAAA,EAAAA,KAAA,SACEH,KAAK,WACLwD,GAAG,WACHlD,KAAK,WACLmD,MAAO1C,EACP2C,SAAW3B,GAAMR,EAAYQ,EAAE4B,OAAOF,OACtC3D,UAAW,qEACT2B,EAAOV,SAAW,iBAAmB,iHAGxCU,EAAOV,WACNZ,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0CAAyCI,SACnDuB,EAAOV,eAIdd,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEoD,QAAQ,cACRzD,UAAU,sDAAqDI,SAChE,sBAGDC,EAAAA,EAAAA,KAAA,SACEH,KAAK,WACLwD,GAAG,cACHlD,KAAK,cACLmD,MAAOvC,EACPwC,SAAW3B,GAAMP,EAAeO,EAAE4B,OAAOF,OACzC3D,UAAW,qEACT2B,EAAOP,YAAc,iBAAmB,iHAG3CO,EAAOP,cACNf,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0CAAyCI,SACnDuB,EAAOP,kBAIdf,EAAAA,EAAAA,KAACT,EAAAA,EAAM,CACLE,MAAM,UACNE,UAAU,2FAGdG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iHAAgHI,SAAA,EAC7HC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,GAAEI,SAAC,8BAChBC,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CACHC,GAAG,cACH/D,UAAU,qCAAoCI,SAC/C,oBAMPC,EAAAA,EAAAA,KAAA,OACEL,UAAU,yDACVgE,MAAO,CACLC,gBAAiB,OAAOC,EAAAA,EAAKC,WAC7B/D,UAEFC,EAAAA,EAAAA,KAAA,OAAK+D,IAAKF,EAAAA,EAAKG,KAAMrE,UAAU,sBAAsBsE,IAAI,aAIjE,C","sources":["components/buttons/Button.jsx","pages/Auth/Signup.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Button({ title, onClick, className, icon, type }) {\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={` bg-primary p-1 group relative overflow-hidden  border-2 border-primary md:h-10 h-6  text-white hover:text-primary flex justify-center items-center ${className}`}\r\n    >\r\n      <span className=\"bg-white w-[500px] aspect-square absolute -top-96 -left-[500px] rotate-45 group-hover:top-1/2 group-hover:left-1/2 group-hover:-translate-x-1/2 group-hover:-translate-y-1/2 duration-300\"></span>\r\n      <div className=\"flex justify-center items-center md:gap-2 gap-1 md:text-base text-[10px] uppercase  z-10 \">\r\n        <span>{title}</span>\r\n        <span>{icon && icon}</span>\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Joi from \"joi\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IMGS } from \"../../utilities/Imgs\";\r\n\r\nconst schema = Joi.object({\r\n  name: Joi.string().alphanum().min(3).max(30).required(),\r\n  email: Joi.string()\r\n    .email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"net\"] },\r\n    })\r\n    .required(),\r\n  password: Joi.string()\r\n    .pattern(new RegExp(\"^(?=.*[A-Z])(?=.*[a-zA-Z]).{7,30}$\"))\r\n    .required(),\r\n  confirmPass: Joi.ref(\"password\"),\r\n});\r\n\r\nexport default function Signup() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPass, setConfirmPass] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    const { error } = schema.validate({ name, email, password, confirmPass });\r\n    if (error) {\r\n      const newErrors = {};\r\n      error.details.forEach(({ path, message }) => {\r\n        if (path[0] === \"confirmPass\") {\r\n          newErrors.confirmPass = \"Passwords must match\";\r\n        } else if (path[0] === \"password\") {\r\n          newErrors.password =\r\n            \"Password must be at least 7 characters long and include at least one uppercase letter\";\r\n        } else {\r\n          newErrors[path[0]] = message;\r\n        }\r\n      });\r\n      setErrors(newErrors);\r\n      return false;\r\n    }\r\n    setErrors({});\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = auth.currentUser;\r\n        console.log(user);\r\n        if (user) {\r\n          await setDoc(doc(db, \"Users\", user.uid), {\r\n            email: user.email,\r\n            name: name,\r\n            photo: \"\",\r\n          });\r\n        }\r\n        console.log(\"User Registered Successfully!!\");\r\n        toast.success(\"User Registered Successfully!!\", {\r\n          position: \"top-center\",\r\n        });\r\n        navigate(\"/\");\r\n      } catch (error) {\r\n        error.message === \"Firebase: Error (auth/email-already-in-use).\"\r\n          ? toast.error(\"Email Already In Use\", {\r\n              position: \"bottom-center\",\r\n            })\r\n          : console.log(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <div className=\"w-full md:w-1/2 flex items-center justify-center bg-white\">\r\n        <div className=\"w-full max-w-md p-8 rounded-lg\">\r\n          <h2 className=\"md:text-4xl text-2xl font-semibold md:mb-6  mb-3 font-serif\">\r\n            SIGN UP\r\n          </h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"block sm:text-sm text-[8px] text-gray-700 uppercase\"\r\n              >\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className={`mt-1 block w-full md:px-3 md:py-2 p-1 md:text-base text-xs border ${\r\n                  errors.name ? \"border-red-500\" : \"border-black\"\r\n                } shadow-sm focus:outline-none focus:ring-primary focus:border-primary sm:sm:text-sm text-[8px]`}\r\n              />\r\n              {errors.name && (\r\n                <p className=\"mt-2 sm:text-sm text-[8px] text-red-600\">\r\n                  {errors.name}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block sm:text-sm text-[8px] text-gray-700 uppercase\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className={`mt-1 block w-full md:px-3 md:py-2 p-1 md:text-base text-xs border ${\r\n                  errors.email ? \"border-red-500\" : \"border-black\"\r\n                } shadow-sm focus:outline-none focus:ring-primary focus:border-primary sm:sm:text-sm text-[8px]`}\r\n              />\r\n              {errors.email && (\r\n                <p className=\"mt-2 sm:text-sm text-[8px] text-red-600\">\r\n                  {errors.email}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block sm:text-sm text-[8px] text-gray-700 uppercase\"\r\n              >\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className={`mt-1 block w-full md:px-3 md:py-2 p-1 md:text-base text-xs border ${\r\n                  errors.password ? \"border-red-500\" : \"border-black\"\r\n                } shadow-sm focus:outline-none focus:ring-primary focus:border-primary sm:sm:text-sm text-[8px]`}\r\n              />\r\n              {errors.password && (\r\n                <p className=\"mt-2 sm:text-sm text-[8px] text-red-600\">\r\n                  {errors.password}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"confirmPass\"\r\n                className=\"block sm:text-sm text-[8px] text-gray-700 uppercase\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPass\"\r\n                name=\"confirmPass\"\r\n                value={confirmPass}\r\n                onChange={(e) => setConfirmPass(e.target.value)}\r\n                className={`mt-1 block w-full md:px-3 md:py-2 p-1 md:text-base text-xs border ${\r\n                  errors.confirmPass ? \"border-red-500\" : \"border-black\"\r\n                } shadow-sm focus:outline-none focus:ring-primary focus:border-primary sm:sm:text-sm text-[8px]`}\r\n              />\r\n              {errors.confirmPass && (\r\n                <p className=\"mt-2 sm:text-sm text-[8px] text-red-600\">\r\n                  {errors.confirmPass}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <Button\r\n              title=\"SIGN UP\"\r\n              className=\"w-full py-3 px-4 bg-primary text-white font-semibold shadow-sm focus:outline-none \"\r\n            />\r\n          </form>\r\n          <div className=\"mt-4 text-center capitalize text-black/60 font-serif sm:text-sm text-xs flex justify-center items-center gap-1\">\r\n            <p className=\"\">Already have an account?</p>\r\n            <Link\r\n              to=\"/auth/login\"\r\n              className=\"hover:text-primary hover:underline\"\r\n            >\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"hidden md:flex justify-end md:w-1/2 bg-cover bg-center\"\r\n        style={{\r\n          backgroundImage: `url(${IMGS.signup})`,\r\n        }}\r\n      >\r\n        <img src={IMGS.logo} className=\"w-24 h-12 mt-5 mr-5\" alt=\"Logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Button","_ref","title","onClick","className","icon","type","_jsxs","children","_jsx","schema","Joi","name","alphanum","min","max","required","email","minDomainSegments","tlds","allow","password","pattern","RegExp","confirmPass","Signup","setName","useState","setEmail","setPassword","setConfirmPass","errors","setErrors","navigate","useNavigate","onSubmit","async","e","preventDefault","validateForm","error","validate","newErrors","details","forEach","path","message","createUserWithEmailAndPassword","auth","user","currentUser","console","log","setDoc","doc","db","uid","photo","toast","success","position","htmlFor","id","value","onChange","target","Link","to","style","backgroundImage","IMGS","signup","src","logo","alt"],"sourceRoot":""}